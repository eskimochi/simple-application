########################################################################################################################
                                                       PREFACE
########################################################################################################################

Hi and welcome to my Spring-Core Learning Repository. What I HOPE to cover is the basics of Spring-Core and its
application in a sample application which we will be building from scratch. I added several external dependencies which
I will "try" to incorporate into our application, depending on whether we may or may not need them. Ideally, the goal
is to make you feel comfortable and get your "feet wet" diving into these unfamiliar topics.

########################################################################################################################
                                                    NOTE FROM OWNER:
########################################################################################################################

There are BILLIONS of better articles out there to teach these concepts. I, myself, am learning these concepts as I am
re-visiting everything. My personal philosophies are:

>"I only trust the source"
>"Google everything"

With that said, please feel free to give me feedback on this!

########################################################################################################################
                                                WHERE SHOULD I BEGIN?
########################################################################################################################

If you are familiar with certain topics feel free to skip the "Information.txt" files. The order will follow the video
tutorials that I will be creating to handle different topics from "start" to "finish". Some topics may not really have
a concrete "start" and "finish", but instead will be used throughout the lifetime of this project.

// Version Control System (Should be familiar with)

Git -   To maintain a project's historical changes as well as keep project state -- a VCS makes having different people
        working on different parts of the project more organized.

// Build Automation Tools (Should be familiar with)

Maven - To cover the basics on cleaning your project, compiling your files, testing your implementation, packaging
        your jar file, and running it.

// Other Technologies

RDBS -   We will begin configuring the SpringCoreApplication by connecting an RDBS.